default:

  tags: [ basic, gridpack, ikp, k8s ]

  artifacts:

    when: always
    untracked: true


variables:

  KUBERNETES_CPU_REQUEST: "1"
  KUBERNETES_CPU_LIMIT: "2"
  KUBERNETES_MEMORY_REQUEST: "4Gi"
  KUBERNETES_MEMORY_LIMIT: "8Gi"
  HTTP_PROXY: "http://proxy01.pnl.gov:3128"
  HTTPS_PROXY: ${HTTP_PROXY}
  http_proxy: ${HTTP_PROXY}
  https_proxy: ${HTTP_PROXY}


.multi-distro:

  parallel:

    matrix:

      - BASE_IMAGE: ubuntu
        BASE_IMAGE_TAG: "22.04"
        IMAGE_PATH: ${CI_REGISTRY_IMAGE}:${BASE_IMAGE}-gridpack-env
      - BASE_IMAGE: rockylinux
        BASE_IMAGE_TAG: "9"
        IMAGE_PATH: ${CI_REGISTRY_IMAGE}:${BASE_IMAGE}-gridpack-env


# https://docs.gitlab.com/ee/ci/docker/using_kaniko.html#building-an-image-with-kaniko-behind-a-proxy
build-container:

  extends: .multi-distro

  timeout: 5 hours

  image:

    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]

  script:

    - chmod +x *.sh
    - >
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg "BASE_IMAGE=${BASE_IMAGE}:${BASE_IMAGE_TAG}"
      --build-arg "http_proxy=$HTTP_PROXY"
      --build-arg "https_proxy=$HTTPS_PROXY"
      --dockerfile "${CI_PROJECT_DIR}/dockerfile"
      --destination "${IMAGE_PATH}" > build.log 2>&1

  rules:

    - if: $CI_PIPELINE_SOURCE == "push"
      changes: [ "dockerfile", "install_environment_packages.sh", "install_gridpack_deps.sh" ]
    - when: manual


build-gridpack:

  extends: .multi-distro

  image: "${IMAGE_PATH}"

  variables:

    MAKE_JOBS: "2"

  needs: [ build-container ]

  script:

    - ./install_gridpack.sh


test-gridpack:

  extends: .multi-distro

  image: ${IMAGE_PATH}

  needs: [ build-gridpack ]

  script:

    - useradd gridpack
    - chown -R gridpack:gridpack .
    - su gridpack -c 'ctest --test-dir src/build --output-on-failure'

  artifacts:

    paths: [ src/build/Testing/Temporary ]
