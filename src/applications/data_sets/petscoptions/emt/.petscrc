# These are the options to tune the solver for the EMT application
# To see the full range of options available with PETSc, run the application with -h
# ./emt.x -h
# All the options prefixed with "-emt_" are used for time-stepping and the nonlinear solver
# associated with the time-stepper.
# Any options that do not have the prefix are either general options OR those for the nonlinear
# solver used for handling disturbances.
# For disabling any options use a preceding #, i.e., comment them out.

-emt_snes_linesearch_type basic

# Numerical integration scheme
-emt_ts_type cn # Implicit trapezoidal
#-emt_ts_type rosw
#-emt_ts_rosw_type 2m

# Time-step adaptivity
-emt_ts_adapt_type none # turn off step adaptivity
#-emt_ts_adapt_type basic # basic (Use -emt_ts_adapt_type basic to turn on adaptivity)

# Tolerances for step adaptivity (only used when step adaptivity is on)
-emt_ts_atol 1e-2
-emt_ts_rtol 1e-2

# Tolerance for event location
-emt_ts_event_tol 1e-3

# Min. and max. steps (only used when step adaptivity is on)
-emt_ts_adapt_dt_max 0.3
-emt_ts_adapt_dt_min 0.01

# End last time at the given final time 
-emt_ts_exact_final_time MATCHSTEP

# Show progress of time-stepper
-emt_ts_monitor

# Show progress of nonlinear solver during each step
#-emt_snes_monitor

# Use full Newton step
-emt_snes_linesearch_type basic

# Use LU factorization as the linear solver
-emt_pc_type lu
-emt_pc_factor_mat_ordering_type qmd
-emt_pc_factor_shift_type NONZERO

#-emt_pc_type asm
#-emt_pc_asm_overlap 2
#-emt_sub_pc_type lu
#-emt_sub_pc_factor_mat_ordering_type qmd

# Use SuperLU_Dist package for doing the linear solve (Note: PETSc must be configured with --download-superlu_dist --download-metis --download-parmetis)
#-emt_pc_type lu
#-emt_pc_factor_mat_solver_package superlu_dist

# Use finite-difference Jacobian
-emt_snes_fd

# Save the output at each time-step
-emt_ts_save_trajectory
-ts_trajectory_keep_files


